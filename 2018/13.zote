include!("stdlib");
include!("aoc.zote");

input := read("input") ;
lines := input >> split("\n");
cartgrid := lines >> map(\>> map(\>> const(false)));

carts := [];

for (row, line) in lines >> enumerate for (col, c) in line >> enumerate {
    match c {
        'v' -> {
            lines[row][col] = '|';
            [[row, col], [1, 0], -1, true] >> push(carts);
            cartgrid[row][col] = true;
        }
        '^' -> {
            lines[row][col] = '|';
            [[row, col], [-1, 0], -1, true] >> push(carts);
            cartgrid[row][col] = true;
        }
        '>' -> {
            lines[row][col] = '-';
            [[row, col], [0, 1], -1, true] >> push(carts);
            cartgrid[row][col] = true;
        }
        '<' -> {
            lines[row][col] = '-';
            [[row, col], [0, -1], -1, true] >> push(carts);
            cartgrid[row][col] = true;
        }
        _ -> {}
    }
}

crash := false;
while true {
    carts = carts >> sort >> filter(\>> [3]);
    if carts >> len >> eq(1) {
        print(carts[0][0][1], ',', carts[0][0][0]);
        return
    }
    
    for cart in carts if cart[3] {
        (pos, dir, turns, alive) := cart;
        (row, col) := pos;

        if lines[row][col] == '/' and dir[0] == 0 dir = rot_left(dir)
        else if lines[row][col] == '/' dir = rot_right(dir);

        if lines[row][col] == '\' and dir[0] == 0 dir = rot_right(dir)
        else if lines[row][col] == '\' dir = rot_left(dir);
        
        if lines[row][col] == '+' match (turns += 1) % 3 {
            0 -> dir = dir >> rot_left,
            1 -> dir = dir,
            2 -> dir = dir >> rot_right,
        }

        cartgrid[row][col] = false;

        npos := dir >> vadd(pos);
        cart[0] = npos;
        cart[1] = dir;
        cart[2] = turns;

        (row, col) := npos;
        if cartgrid[row][col] {
            // Part 1
            if !crash {
                crash = true;
                print(col, ',', row);
            }
            cartgrid[row][col][3] = false;
            cart[3] = false;
            cartgrid[row][col] = false;
        } else {
            cartgrid[row][col] = cart;
        }
    }
}
